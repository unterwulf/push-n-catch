#!/bin/sh

. ${0%/*}/functions

run_till_output() {
	trigger=$1
	shift
	fifo=$catchdir/$1.fifo
	ret=1
	mkfifo $fifo
	"$@" >$fifo 2>&1 &
	while read line; do
		echo "$line"
		case $line in
			$trigger)
				sleep 1
				ret=0
				kill -s INT $!
				wait $! || true
				;;
		esac
	done <$fifo
	rm $fifo
	return $ret
}

testcase() {
	dd if=/dev/null of=verybigfile seek=256 bs=1M count=0 2>/dev/null
	run_till_output "Sending*" push 127.0.0.1 verybigfile

	# Use actual size of data transferred during the first attempt to tune
	# the total size, so that the test will adapt to the system and will
	# not take too much time.
	size=$(wc -c <$catchdir/verybigfile)
	dd if=/dev/null of=verybigfile seek=$((3*size/1024)) bs=1K count=0 2>/dev/null

	run_till_output "Resume*" push 127.0.0.1 verybigfile
	push 127.0.0.1 verybigfile
	expect_catch transfer_completed

	kill_catch # ...to make sure the file is actually written to disk.
	diff verybigfile $catchdir/verybigfile
}

teardown() {
	rm -f verybigfile
}

run
